<%= form_tag(update_url_path, method: :post, remote: true, class: 'flex relative w-[100%]', id: 'update-url-form', 'data-turbolinks-action' => 'replace', onsubmit: 'launchLoadingScreen(event)') do %>
    <label for="search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
        <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
            </svg>
        </div>
        <%= text_field_tag :url, @url.strip, id: "url-input-text", class: "block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500" %>
        <%= number_field_tag :quantity, @quantity, class: "absolute end-[20%] bottom-2 w-13 border border-gray-300 rounded-md bg-gray-50", min: 1, max: 10 %>
        
        <%= submit_tag 'Scrape URL', class: 'text-white absolute end-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-md text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 cursor-pointer' %>
<% end %>


 <script>
    function resetTextFieldOnLoad(){
        document.addEventListener('DOMContentLoaded', () => {
            if(document.getElementById('url-input-text')){
                const searchField = document.getElementById('url-input-text')
                searchField.value = "Enter url to be scraped"
            }
        });
    }
    function emptyTextField(){
        const searchField = document.getElementById('url-input-text')
        searchField.addEventListener('click', () => {
            if(searchField.value == "Enter url to be scraped"){
                searchField.value = " "
            }
        })
    }
    function launchLoadingScreen(){
        
        const loadingScreen = document.querySelectorAll('.loading')
        
        console.log("loading")
        console.log("loading", loadingScreen)

        loadingScreen.forEach(element => {
                console.log("show loading")
                element.classList.remove('hidden')
        });

    }

    emptyTextField()
    resetTextFieldOnLoad()
</script>